name: Publish Shared Package

on:
    workflow_dispatch:
    push:
        paths:
            - '.github/workflows/publish-shared.yml'
            - 'shared/package.json'
            - 'shared/tsconfig.json'
            - 'shared/src/**'

permissions:
    contents: read
    packages: write

jobs:
    publish:
        if: ${{ github.actor != 'dependabot[bot]' }}
        runs-on: 'self-hosted'
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: create .npmrc
              working-directory: shared
              run: |
                  echo "@aditya-arcot:registry=https://npm.pkg.github.com/" >> .npmrc
                  echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_NPM_TOKEN }}" >> .npmrc

            - name: npm config
              working-directory: shared
              run: |
                  npm --userconfig=/dev/null config ls

            - name: npm cache
              working-directory: shared
              run: |
                  npm --userconfig=/dev/null cache verify
                  npm --userconfig=/dev/null cache clean --force

            - name: check if version already published
              id: check-version
              working-directory: shared
              run: |
                  VERSION=$(jq -r .version package.json)
                  PACKAGE_NAME="@aditya-arcot/dependabot-test-shared"
                  if PUBLISHED=$(npm --userconfig=/dev/null view "$PACKAGE_NAME" version --registry=https://npm.pkg.github.com/ 2>&1); then
                    echo "Latest published version is $PUBLISHED"
                    if [ "$VERSION" = "$PUBLISHED" ]; then
                      echo "Package version $VERSION already published"
                      echo "skip_publish=true" >> $GITHUB_OUTPUT
                    else
                      echo "Package version $VERSION not published"
                      echo "skip_publish=false" >> $GITHUB_OUTPUT
                    fi
                  else
                    if echo "$PUBLISHED" | grep -q "E404"; then
                        echo "Package has never been published"
                        echo "skip_publish=false" >> $GITHUB_OUTPUT
                    else
                        echo "Could not get published package version"
                        echo "npm error: $PUBLISHED"
                        exit 1
                    fi
                  fi

            - name: setup node
              if: steps.check-version.outputs.skip_publish == 'false'
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'
                  check-latest: true

            - name: install, build
              if: steps.check-version.outputs.skip_publish == 'false'
              working-directory: shared
              run: |
                  npm --userconfig=/dev/null ci
                  npm --userconfig=/dev/null run build

            - name: publish
              if: steps.check-version.outputs.skip_publish == 'false'
              working-directory: shared
              run: |
                  npm --userconfig=/dev/null whoami --registry=https://npm.pkg.github.com/
                  npm --userconfig=/dev/null publish --access public
